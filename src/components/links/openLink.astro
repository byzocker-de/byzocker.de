---
export interface Props{
    id: string;
    name: string;
    serviceurl: string;
}

const { name, serviceurl } = Astro.props;

// Get Domain from URL to show in dialog
const url = new URL(serviceurl);
const domain = url.hostname;

// Generate a unique ID based on the service name
const uniqueId = name.toLowerCase().replace(/\s+/g, '-') + '-dialog';
---

<section>
  <button
    type="button"
    class="cs-btn m1-hover"
    onclick={`document.querySelector('#${uniqueId}').showModal();`}
  >
    <!-- Open {name} -->
    Open
  </button>
  <dialog id={uniqueId} class="cs-dialog">
    <form method="dialog">
      <div class="heading">
        <div class="wrapper">
          <div class="icon"></div>
          <p class="text">Open {name}</p>
        </div>
        <button class="cs-btn close m1-hover"></button>
      </div>
      <div class="content">
        You're about to visit {domain}, are you sure you want to continue?
      </div>
      <menu class="footer-btns">
        <button
          class="cs-btn m1-hover"
          id={`${uniqueId}-continue-button`}
          data-serviceurl={serviceurl}
        >
          OK
        </button>
        <button class="cs-btn m1-hover">Cancel</button>
      </menu>
    </form>
  </dialog>
</section>

<script>
// Add event listeners dynamically for each unique button
document.addEventListener('DOMContentLoaded', function () {
  const buttons = document.querySelectorAll('[id$="-continue-button"]');
  buttons.forEach(button => {
    button.addEventListener('click', function () {
      const serviceurl = this.getAttribute('data-serviceurl');
      window.open(serviceurl, '_blank');
    });
  });
});
</script>

<style>

.m1-hover{
  cursor: pointer; 
}

</style>